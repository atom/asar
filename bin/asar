#!/usr/bin/env node
var asar = require('../lib/asar');
var program = require('commander');
var excludes = [];
var includes = [];

function addExclude(val) {
  excludes.push(val);
}
function addInclude(val) {
  includes.push(val);
}

program.version('v' + require('../package.json').version)
       .description('Manipulate asar archive files')
       .option('-e, --exclude <path>', 'exclude paths from being archived', addExclude)
       .option('-i, --include <path>', 'include paths that have been excluded', addInclude);

program.command('pack <dir> <output>')
       .alias('p')
       .description('create asar archive')
       .action(function(dir, output) { asar.createPackage(dir, output, excludes, includes); });

program.command('list <archive>')
       .alias('l')
       .description('list files of asar archive')
       .action(function(archive) {
         files = asar.listPackage(archive);
         for (i in files)
           console.log(files[i]);
       });

program.command('extract-file <archive> <filename>')
       .alias('ef')
       .description('extract one file from archive')
       .action(function(archive, filename) {
         require('fs').writeFileSync(require('path').basename(filename),
                                     asar.extractFile(archive, filename));
       });

program.parse(process.argv);

if (program.args.length == 0)
  program.help();
